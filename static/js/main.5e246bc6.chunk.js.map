{"version":3,"sources":["assets/sounds/RT_Ian_Chang_Kick_1_Drums_Ian_Chang_one_shot.wav","assets/sounds/RT_Ian_Chang_Tea_Towel_Snare_1_Medium_1_Drums_Ian_Chang_one_shot.wav","assets/sounds/Hat_XL_13.wav","app/actions/effectsActions.js","app/store/reducers/effectsReducer.js","app/store/dataSource/effects.js","app/store/reducers/soundsReducer.js","app/store/dataSource/sounds.js","app/store/dataSource/beats.js","app/store/reducers/beatsReducer.js","app/store/index.js","app/util/BufferLoader.js","app/util/AudioService.js","app/util/Clock.js","app/TouchPad.js","app/Track.js","app/Controls.js","app/Effects.js","app/RunningLights.js","app/Sequencer.js","app/App.js","index.js"],"names":["module","exports","Constants","TOGGLE_EFFECT","initialState","Immutable","fromJS","compression","enabled","distortion","highpass","lowpass","id","name","src","kick","params","gain","snare","hat","key","bpm","subdivision","sequence","rootReducer","combineReducers","effects","state","action","type","effectName","path","effectState","getIn","setIn","toggleEffect","sounds","beats","store","createStore","BufferLoader","context","fileList","this","bufferList","loadCount","prototype","loadBuffer","file","index","Promise","resolve","reject","request","XMLHttpRequest","open","responseType","loader","onload","decodeAudioData","response","buffer","err","onerror","send","load","promises","i","length","push","all","HIGH_PASS","LOW_PASS","DISTORTION_CURVE","amount","k","curve","Float32Array","deg","Math","PI","x","abs","makeDistortionCurve","handleSamplesLoaded","files","forEach","trackBuffers","makeFilter","audioCtx","opts","filter","createBiquadFilter","frequency","setValueAtTime","currentTime","audioService","AudioContext","masterChannel","scheduleAudio","bind","then","stuff","call","catch","error","console","bufferName","time","source","createBufferSource","node","gainNode","createGain","connect","compressor","createDynamicsCompressor","threshold","knee","ratio","attack","release","makeCompressor","waveShaper","createWaveShaper","oversample","makeDistortion","applyEffects","destination","start","calcStepDurationMillis","clock","sequenceLength","startTime","expectedTime","actualTime","isRunning","timeoutId","interval","currentStep","stop","step","setBPM","setParams","getParams","Audio","getCurrentTime","emit","clearTimeout","diff","setTimeout","handleChange","EventEmitter","TouchPad","props","className","classnames","active","disabled","onClick","Track","stepCount","Clock","getSequenceLength","html","onClickTouchPad","trackname","renderTouchPads","handleChangeBPM","event","target","value","Controls","BPM","isPlaying","min","max","onChange","Effects","settings","RunningLights","count","idx","renderLights","setEnabledTracks","tracksEnabled","sound","Sequencer","clockParams","beat","beatKey","enabledTracks","handleClickTouchPad","handleClickTrackname","handleClickEffects","handleClockStep","handleClockStart","handleClockStop","handleClockParamChange","scheduleSequenceStep","addListener","loadAudio","removeListener","setState","log","clockStep","sequenceStep","soundName","Object","assign","track","updatedSeq","dispatch","when","actualParams","map","renderTracknames","renderTracks","Component","get","App","selectedBeat","handleBeatSelected","beatKeys","options","find","renderBeatSelect","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5e246bc6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/RT_Ian_Chang_Kick_1_Drums_Ian_Chang_one_shot.e1d4e232.wav\";","module.exports = __webpack_public_path__ + \"static/media/RT_Ian_Chang_Tea_Towel_Snare_1_Medium_1_Drums_Ian_Chang_one_shot.bb5dc9f1.wav\";","module.exports = __webpack_public_path__ + \"static/media/Hat_XL_13.faea9d0d.wav\";","export const Constants = {\n    TOGGLE_EFFECT: 'TOGGLE_EFFECT'\n};\n\n/*\n * action creators\n */\n\nexport function toggleEffect(effectName) {\n    return {\n        type: Constants.TOGGLE_EFFECT,\n        effectName\n    };\n};\n","import Immutable from 'immutable';\nimport effects from '../dataSource/effects';\nimport { Constants } from '../../actions/effectsActions';\n\nconst initialState = Immutable.fromJS(effects);\n\nfunction toggleEffect(state, effectName) {\n    const path = [effectName,'enabled'];\n    const effectState = state.getIn(path);\n    return state.setIn(path, !effectState);\n}\n\nexport default function effectsReducer(state, action) {\n    if (typeof state === 'undefined') {\n      return initialState\n    }\n  \n    switch (action.type) {\n        case Constants.TOGGLE_EFFECT:\n          return toggleEffect(state, action.effectName);\n        default:\n          return state;\n      }\n}\n","export default {\n    compression: {\n      enabled: true\n    },\n    distortion: {\n      enabled: false\n    },\n    highpass: {\n      enabled: false\n    },\n    lowpass: {\n      enabled: false\n    }\n}","import sounds from '../dataSource/sounds';\n\nconst initialState = sounds;\n\nexport default function soundsReducer(state, action) {\n    if (typeof state === 'undefined') {\n      return initialState\n    }\n  \n    // For now, don't handle any actions\n    // and just return the state given to us.\n    return state\n}\n","import kick from '../../../assets/sounds/RT_Ian_Chang_Kick_1_Drums_Ian_Chang_one_shot.wav';\nimport snare from '../../../assets/sounds/RT_Ian_Chang_Tea_Towel_Snare_1_Medium_1_Drums_Ian_Chang_one_shot.wav';\nimport hat from '../../../assets/sounds/Hat_XL_13.wav';\n\nexport default [\n  {\n    id: 0,\n    name:'kick',\n    src: kick,\n    params: {\n      gain: 0.4\n    }\n  },\n  {\n    id:1,\n    name:'snare',\n    src: snare,\n    params: {\n    gain: 0.6\n    }\n  },\n  {\n    id: 2,\n    name:'hat',\n    src: hat,\n    params: {\n      gain: 0.2\n    }\n  }\n];\n","/**\n * DEMO DATA in absence of a DB to read/write.\n * */\n\nconst NEW = {\n    key: 'NEW',\n    name: 'NEW',\n    bpm: 120,\n    subdivision: 16,\n    sequence: {\n        kick:  [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\n        snare: [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\n        hat:   [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]\n    }\n}\n\nconst FOUR_ON_THE_FLOOR = {\n    key: 'FOUR_ON_THE_FLOOR',\n    name: '4 On The Floor',\n    bpm: 112,\n    subdivision: 16,\n    sequence: {\n        kick:  [1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0],\n        snare: [0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0],\n        hat:   [0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0]\n    }\n}\n\nconst HIP_HOP = {\n    bpm: \"116\",\n    key: \"HIP_HOP\",\n    name: \"Hip Hop\",\n    sequence: {\n        hat:    [1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0],\n        kick:   [1,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0],\n        snare:  [0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0]\n    },\n    subdivision: 16\n}\n\nconst WONKY_ROCK = {\n    bpm: \"108\",\n    key: \"WONKY_ROCK\",\n    name: \"Wonky Rock\",\n    sequence: {\n        hat:    [1,0,1,0,0,1,0,1,0,0,1,0,1,0,1,0],\n        kick:   [1,0,0,0,0,0,1,0,0,1,0,1,0,0,0,0],\n        snare:  [0,0,0,0,1,0,0,0,1,0,0,0,0,1,0,0]\n    },\n    subdivision: 16\n}\n\nconst THREE_AGAINST_FOUR = {\n    key: 'THREE_AGAINST_FOUR',\n    bpm: '140',\n    name: '3 Against 4',\n    sequence: {\n        hat:    [1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0],\n        kick:   [1,0,0,1,0,0,1,0,0,1,0,0,0,0,1,0],\n        snare:  [0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0],\n    },\n    subdivision: 16\n}\n\nconst THRASH = {\n    bpm: '220',\n    key: 'THRASH',\n    name: 'Thrash',\n    sequence: {\n        hat:    [1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0],\n        kick:   [1,0,1,1,0,0,1,0,1,0,1,0,0,0,1,0],\n        snare:  [0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0],\n    },\n    subdivision: 16\n}\n\nconst EXCUSE_ME = {\n    key: 'EXCUSE_ME',\n    bpm: '300',\n    name: 'EXCUSE ME',\n    sequence: {\n        hat:    [1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0],\n        kick:   [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],\n        snare:  [0,1,1,0,1,1,1,0,0,0,1,1,1,1,1,1]\n    },\n    subdivision: 16\n}\n\nexport default [\n    NEW,\n    FOUR_ON_THE_FLOOR,\n    HIP_HOP,\n    WONKY_ROCK,\n    THREE_AGAINST_FOUR,\n    THRASH,\n    EXCUSE_ME\n];","import beats from '../dataSource/beats';\n\nconst initialState = beats;\n\nexport default function beatsReducer(state, action) {\n    if (typeof state === 'undefined') {\n      return initialState\n    }\n  \n    // For now, don't handle any actions\n    // and just return the state given to us.\n    return state\n}\n","import { createStore } from 'redux';\nimport { combineReducers } from 'redux-immutable';\n\nimport effectsReducer from './reducers/effectsReducer';\nimport soundsReducer from './reducers/soundsReducer';\nimport beatsReducer from './reducers/beatsReducer';\n\nconst rootReducer = combineReducers({\n    effects: effectsReducer,\n    sounds: soundsReducer,\n    beats: beatsReducer\n  });\n\nconst store = createStore(rootReducer);\nexport default store;","import Promise from 'bluebird';\n\nfunction BufferLoader(context, fileList) {\n    this.context = context;\n    this.fileList = fileList;\n    this.bufferList = []\n    this.loadCount = 0;\n}\n\nBufferLoader.prototype.loadBuffer = function(file, index) {\n    return new Promise((resolve, reject) => {\n        // Load buffer asynchronously\n        let request = new XMLHttpRequest();\n        request.open(\"GET\", file.src, true);\n        request.responseType = \"arraybuffer\";\n\n        let loader = this;\n\n        request.onload = function() {\n            // Asynchronously decode the audio file data in request.response\n            loader.context.decodeAudioData(\n                request.response,\n                function(buffer) {\n                    if (!buffer) {\n                        reject('error decoding file data: ' + file.src);\n                    }\n                    loader.loadCount++;\n                    loader.bufferList[index] = {\n                        name: file.name,\n                        buffer: buffer\n                    };\n                    resolve({\n                        name: file.name,\n                        buffer: buffer\n                    });\n                },\n                function(err) {\n                    reject(err);\n                }\n            );\n        }\n\n        request.onerror = function(err) {\n            reject(err);\n        }\n\n        request.send();\n    });\n}\n\nBufferLoader.prototype.load = function() {\n    let promises = [];\n    for (var i = 0; i < this.fileList.length; ++i) {\n        promises.push(this.loadBuffer(this.fileList[i], i));\n    }\n\n    return Promise.all(promises);\n}\n\nexport default BufferLoader;","import BufferLoader from './BufferLoader';\n\n/**\n * Recipe for a distortion curve, taken from \n * https://code-examples.net/en/docs/dom/waveshapernode\n * \n * @param {Number} amount \n */\nfunction makeDistortionCurve(amount) {\n    const k = typeof amount === 'number' ? amount : 50;\n    const n_samples = 44100;\n    const curve = new Float32Array(n_samples);\n    const deg = Math.PI / 180;\n\n    for (let i = 0 ; i < n_samples; i++ ) {\n      let x = i * 2 / n_samples - 1;\n      curve[i] = ( 3 + k ) * x * 20 * deg / ( Math.PI + k * Math.abs(x) );\n    }\n    return curve;\n};\n\nconst HIGH_PASS = 750;\nconst LOW_PASS = 500;\nconst DISTORTION_AMOUNT = 33;\nconst DISTORTION_CURVE = makeDistortionCurve(DISTORTION_AMOUNT);\n\nclass AudioService {\n    constructor() {\n        this.audioCtx = new AudioContext();\n        this.trackBuffers = [];\n        this.masterChannel = [];        \n        this.scheduleAudio = this.scheduleAudio.bind(this);\n    }\n\n    loadAudio(files) {\n        let bufferLoader = new BufferLoader(\n            this.audioCtx,\n            files\n          );\n        \n        bufferLoader.load()\n            .then((stuff) => {\n                handleSamplesLoaded.call(this, stuff);\n            })\n            .catch((error) => {\n                console.error(error);\n            });\n    }\n\n    scheduleAudio(bufferName, time, params, effects) {\n        let audioCtx = this.audioCtx;\n        // console.log(`schedule: @${time || 'now'}. currentTime: ${this.audioCtx.currentTime}`);\n        let source = audioCtx.createBufferSource();\n        source.buffer = this.trackBuffers[bufferName]\n        \n        // run through effects options\n        let node = applyEffects(source, audioCtx, params, effects);\n        \n        node.connect(audioCtx.destination);\n        source.start(time);\n    }\n\n    getCurrentTime() {\n        return this.audioCtx.currentTime;\n    }\n}\n\nfunction handleSamplesLoaded(files) {\n    files.forEach(file => {\n      this.trackBuffers[file.name] = file.buffer;\n    });\n}\n\nfunction applyEffects(node, audioCtx, params, effects) {\n    if (params && params.gain) {\n        let gainNode = audioCtx.createGain();\n        gainNode.gain.setValueAtTime(params.gain, audioCtx.currentTime);\n        node.connect(gainNode);\n        node = gainNode;\n    }\n\n    if (effects && effects.getIn(['compression','enabled'])) {\n        let compressor = makeCompressor(audioCtx);\n        node.connect(compressor);\n        node = compressor;\n    }\n\n    if (effects && effects.getIn(['distortion','enabled'])) {\n        let distortion = makeDistortion(audioCtx);\n        node.connect(distortion);\n        node = distortion;\n    }\n\n    if (effects && effects.getIn(['highpass','enabled'])) {\n        let highpass = makeFilter(audioCtx, {type: 'highpass', frequency: HIGH_PASS});\n        node.connect(highpass);\n        node = highpass;\n    }\n\n    if (effects && effects.getIn(['lowpass','enabled'])) {\n        let lowpass = makeFilter(audioCtx, {type: 'lowpass', frequency: LOW_PASS});\n        node.connect(lowpass);\n        node = lowpass;\n    }\n\n    return node;\n}\n\nfunction makeCompressor(audioCtx) {\n    let compressor = audioCtx.createDynamicsCompressor();\n    compressor.threshold.setValueAtTime(-50, audioCtx.currentTime);\n    compressor.knee.setValueAtTime(40, audioCtx.currentTime);\n    compressor.ratio.setValueAtTime(12, audioCtx.currentTime);\n    compressor.attack.setValueAtTime(0.25, audioCtx.currentTime);\n    compressor.release.setValueAtTime(0.67, audioCtx.currentTime);\n    return compressor;\n}\n\nfunction makeFilter(audioCtx, opts) {\n    let filter = audioCtx.createBiquadFilter();\n    filter.type = opts.type;\n    if (opts.frequency) {\n        filter.frequency.setValueAtTime(opts.frequency, audioCtx.currentTime);\n    }\n    return filter;\n}\n\nfunction makeDistortion(audioCtx) {\n    let waveShaper = audioCtx.createWaveShaper();\n    waveShaper.curve = DISTORTION_CURVE;\n    waveShaper.oversample = '4x';\n    return waveShaper;\n}\n\nconst audioService = new AudioService();\nexport default audioService;","import { EventEmitter } from 'events';\nimport Audio from './AudioService';\n\n/**\n * Calculate the duration in milliseconds of 1 sequence step.\n * @param {Number} bpm              beats per minute\n * @param {Number} subdivision      rhythmic value of one sequence step (eg: quarter, 8th, 16th note)\n */\nfunction calcStepDurationMillis(bpm, subdivision) {\n    \n    // quarter note;\n    const beatValue = 4;\n\n    // return-value units per minute\n    const ms = 60000;\n\n    // (millis per min / beats per min) * (beat value / sequence-step value)\n    return ( ms / bpm ) * ( beatValue / subdivision );\n}\n\nclass Clock extends EventEmitter {\n    constructor() {\n        super();\n\n        // input parameters (defaults)\n        this.subdivision = 16;      // changeable\n        this.bpm = 128;             // changeable\n        this.sequenceLength = 16;   // nonchangeable\n\n        // timer variables\n        this.startTime = 0;\n        this.expectedTime = 0;      // expected time-elapsed\n        this.actualTime = 0;        // actual time-elapsed\n        \n        // run-time vars\n        this.isRunning = false;\n        this.timeoutId = null;\n        this.interval = calcStepDurationMillis(this.bpm, this.subdivision);\n        this.currentStep = 0;\n\n        // method bindings\n        this.start = this.start.bind(this);\n        this.stop = this.stop.bind(this);\n        this.step = this.step.bind(this);\n        this.setBPM = this.setBPM.bind(this);\n        this.setParams = this.setParams.bind(this)\n        this.getParams = this.getParams.bind(this);\n    }\n\n    start() {\n        if (this.isRunning) {\n            return;\n        }        \n        // align timing variables\n        this.startTime = Audio.getCurrentTime();\n        this.expectedTime = 0;\n        this.actualTime = 0;\n\n        this.currentStep = 0;\n        this.isRunning = true;\n        \n        this.emit('start');\n        this.step();\n    }\n\n    stop() {\n        this.isRunning = false;\n        clearTimeout(this.timeoutId);\n        this.emit('stop');\n    }\n\n    step() {\n        // how much time actually elapsed?\n        this.actualTime = Audio.getCurrentTime() - this.startTime;\n        // console.warn(`ACTUAL ${this.actualTime}`)\n        // console.warn(`EXPECTED ${this.expectedTime}`)\n\n        // get the diff: actualTime is >= than expectedTime due to the potential lag in `setTimeout` function.\n        var diff = this.actualTime - this.expectedTime;\n        // console.warn(`TIMEOUT ${this.interval - diff}`)\n        this.timeoutId = setTimeout(this.step, this.interval - diff)\n        \n\n        this.emit('step', this.currentStep);\n        this.currentStep++;\n        this.expectedTime += this.interval / 1000;\n    }\n\n    handleChange() {\n        this.emit('change', this.getParams());\n    }\n\n    getSequenceLength() {\n        return this.sequenceLength;\n    }\n\n    getParams() {\n        return {\n            subdivision: this.subdivision,\n            bpm: this.bpm\n        }\n    }\n    \n    setBPM(bpm) {\n        this.bpm = bpm;\n        this.interval = calcStepDurationMillis(bpm, this.subdivision);\n        this.handleChange();\n    }\n\n    setParams(params) {\n        // assignment order matters.\n        this.subdivision = params.subdivision;\n        this.setBPM(params.bpm)\n    }\n}\n\nconst clock = new Clock();\nexport default clock;\n","import React from 'react';\nimport classnames from 'classnames';\nimport './TouchPad.css';\n\nfunction TouchPad(props) {\n  return (\n        <li\n            className={classnames(\n              'TouchPad-container',\n              {\n                active: props.active,\n                disabled: props.disabled\n              }\n            )}\n            onClick={props.onClick}\n        />\n  );\n}\n\nexport default TouchPad;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Track.css';\n\nimport Clock from './util/Clock';\nimport TouchPad from './TouchPad';\n\n\nfunction renderTouchPads(props) {\n    let stepCount = Clock.getSequenceLength();\n    let html = [];\n    for (let step=0; step < stepCount; step++) {\n        html.push(\n            <TouchPad\n                key={`touch-pad-${step}`}\n                active={props.sequence[step]}\n                disabled={!props.enabled}\n                onClick={props.onClickTouchPad.bind(null, props.trackname, step)}\n            />\n        )\n    }\n    return html;\n}\n\nexport default function Track(props) {\n    return (\n        <ul className=\"Track-container\">\n            {renderTouchPads(props)}\n        </ul>\n    );\n}\n\nTrack.propTypes = {\n    trackname: PropTypes.string,\n    sequence: PropTypes.array,\n    onClickTouchPad: PropTypes.func\n};\n\n","import React from 'react';\nimport classnames from 'classnames';\nimport './Controls.css';\n\nimport Clock from './util/Clock';\n\nfunction handleChangeBPM(event) {\n    Clock.setBPM(event.target.value);\n}\n\nexport default function Controls(props) {\n    const BPM = props.bpm;\n    return (\n        <ul\n            className={classnames(\"Controls-container\", {active: props.active})}\n            onClick={props.onClick}\n        >\n            <li className={classnames('play', 'playback')}>\n                <button \n                    className={classnames('play', {active: props.isPlaying})}\n                    onClick={Clock.start}\n                >\n                    play_arrow\n                </button>\n                <button\n                    className={classnames('stop', {active: props.isPlaying})}\n                    onClick={Clock.stop}\n                >\n                    stop\n                </button>\n            </li>\n            <li className=\"bpm-slider-container\">\n                <input\n                    className=\"bpm-slider\"\n                    type=\"range\"\n                    value={BPM}\n                    min={10}\n                    max={300}\n                    onChange={handleChangeBPM}\n                />\n            </li>\n            <li className=\"bpm-readout\">\n                <div>{BPM}</div>\n            </li>\n        </ul>\n    );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Immutable from 'immutable';\nimport classnames from 'classnames';\nimport './Effects.css';\n\nexport default function Effects(props) {\n\n    function handleClickCompressor() {\n        props.onClick('compression');\n    }\n\n    function handleClickDistortion() {\n        props.onClick('distortion');\n    }\n\n    function handleClickHighpass() {\n        props.onClick('highpass');\n    }\n\n    function handleClickLowpass() {\n        props.onClick('lowpass');\n    }\n\n    // function handleClickDelay() {\n    //     props.onClick('delay');\n    // }\n\n    return (\n        <div\n            className={'Effects-container'}\n        >\n            <button\n                className={classnames('Effects-compressor',{enabled: props.settings.getIn(['compression','enabled'])})}\n                onClick={handleClickCompressor}\n            >\n                compressor\n            </button>\n            <button\n                className={classnames('Effects-distortion',{enabled: props.settings.getIn(['distortion','enabled'])})}\n                onClick={handleClickDistortion}\n            >\n                distortion\n            </button>\n            <button\n                className={classnames('Effects-highpass',{enabled: props.settings.getIn(['highpass','enabled'])})}\n                onClick={handleClickHighpass}\n            >\n                high pass\n            </button>\n            <button\n                className={classnames('Effects-lowpass',{enabled: props.settings.getIn(['lowpass','enabled'])})}\n                onClick={handleClickLowpass}\n            >\n                low pass\n            </button>\n            {/* <button\n                className={classnames('Effects-delay',{enabled: props.delay.enabled})}\n                onClick={handleClickDelay}\n            >\n                delay\n            </button> */}\n        </div>\n    );\n}\n\nEffects.propTypes = {\n    settings: PropTypes.instanceOf(Immutable.Map)\n}","import React from 'react';\nimport classnames from 'classnames';\nimport './RunningLights.css';\n\nimport Clock from './util/Clock';\n\nfunction renderLights(count, props) {\n    let html = [];\n    for (let idx = 0; idx < count; idx++) {\n        html.push(\n            <div \n                key={`running-light-${idx}`}\n                className={classnames(\"RunningLights-light\", {'active': props.active && props.currentStep === idx})}\n            />\n        )\n    }\n    return html;\n}\n\nexport default function RunningLights(props) {\n    let stepCount = Clock.getSequenceLength();\n    return (\n        <ul className=\"RunningLights-container\">\n            {renderLights(stepCount, props)}\n        </ul>\n    );\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport {Component} from 'react';\nimport classnames from 'classnames';\n\nimport Clock from './util/Clock';\nimport Audio from './util/AudioService';\n\nimport Track from './Track';\nimport Controls from './Controls';\nimport Effects from './Effects';\nimport RunningLights from './RunningLights';\n\nimport { toggleEffect } from './actions/effectsActions';\n\nimport './Sequencer.css';\n\nfunction setEnabledTracks(sounds) {\n  let tracksEnabled = {};\n  sounds.forEach(sound => {\n    tracksEnabled[sound.name] = true\n  });\n  return tracksEnabled;\n}\n\nclass Sequencer extends Component {\n  constructor(props) {\n    super(props);\n\n    let clockParams = {\n      bpm: props.beat.bpm,\n      subdivision: props.beat.subdivision\n    }\n\n    let state = {\n      beatKey: props.beat.key,\n      enabledTracks: setEnabledTracks(props.sounds),\n      sequence: props.beat.sequence,\n      isPlaying: false,\n      currentStep: 0,\n      clockParams: clockParams\n    };\n\n    this.state = state;\n\n    Clock.setParams(clockParams);\n\n    this.handleClickTouchPad = this.handleClickTouchPad.bind(this);\n    this.handleClickTrackname = this.handleClickTrackname.bind(this);\n    this.handleClickEffects = this.handleClickEffects.bind(this);\n    this.handleClockStep = this.handleClockStep.bind(this);\n    this.handleClockStart = this.handleClockStart.bind(this);\n    this.handleClockStop = this.handleClockStop.bind(this);\n    this.handleClockParamChange = this.handleClockParamChange.bind(this);\n    this.scheduleSequenceStep = this.scheduleSequenceStep.bind(this);\n  }\n\n  componentDidMount() {\n    Clock.addListener('start', this.handleClockStart);\n    Clock.addListener('stop', this.handleClockStop);\n    Clock.addListener('step', this.handleClockStep);\n    Clock.addListener('change', this.handleClockParamChange);\n\n    Audio.loadAudio(this.props.sounds);\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    if (props.beat.key !== state.beatKey) {\n      if (state.isPlaying) {\n        Clock.stop();\n      }\n\n      // MOVE CLOCK PARAMS TO STORE. RECEIVE PARAMS AS PROPS.\n\n      let clockParams = {\n        bpm: props.beat.bpm,\n        subdivision: props.beat.subdivision\n      };\n\n      state.sequence = props.beat.sequence;\n      state.beatKey = props.beat.key;\n      state.enabledTracks = setEnabledTracks(props.sounds);\n      state.clockParams = clockParams;\n      Clock.setParams(clockParams);\n    }\n\n    return state;\n  }\n\n  componentWillUnmount() {\n    Clock.stop();\n    Clock.removeListener('start', this.handleClockStart);\n    Clock.removeListener('stop', this.handleClockStop);\n    Clock.removeListener('step', this.handleClockStep);\n    Clock.removeListener('change', this.handleClockParamChange);\n  }\n\n  /**\n   * The clock started. Update state.\n   */\n  handleClockStart() {\n    this.setState({\n      isPlaying: true\n    });\n\n    console.log({\n      key: this.state.beatKey,\n      bpm: this.state.clockParams.bpm,\n      subdivision: this.state.clockParams.subdivision,\n      sequence: this.state.sequence\n    })\n  }\n\n  /**\n   * The clock stopped. Stop & reset the sequence.\n   */\n  handleClockStop() {\n    this.setState({\n      isPlaying: false,\n      currentStep: 0\n    });\n  }\n\n  /**\n   * The clock ticked. Do update.\n   * @param {Number} clockStep   The nth step the clock has ticked since starting; 0 start.\n   */\n  handleClockStep(clockStep) {\n    let sequenceStep = clockStep % Clock.getSequenceLength();\n    this.scheduleSequenceStep(sequenceStep, Audio.getCurrentTime());\n    this.setState({\n      currentStep: sequenceStep\n    });\n  }\n\n  /**\n   * Clock params changed. Do Update.\n   */\n  handleClockParamChange(params) {\n    this.setState({\n      clockParams: params\n    })\n  }\n\n  handleClickTrackname(soundName) {\n    const enabledTracks = Object.assign({}, this.state.enabledTracks);\n    enabledTracks[soundName] = !enabledTracks[soundName];\n    this.setState({\n      enabledTracks: enabledTracks\n    });\n  }\n\n  handleClickTouchPad(track, step) {\n    // copy the sequence array before performing update\n    let updatedSeq = Object.assign({}, this.state.sequence);\n\n    // toggle the on/off state\n    updatedSeq[track][step] = !updatedSeq[track][step];\n\n    this.setState({\n      sequence: updatedSeq\n    })\n  }\n\n  handleClickEffects(effectName) {\n    this.props.dispatch(toggleEffect(effectName));\n  }\n\n  scheduleSequenceStep(step, when) {\n    this.props.sounds.forEach(sound => {\n      if (!this.state.enabledTracks[sound.name]) {\n        return;\n      }\n      let triggerOn = this.state.sequence[sound.name][step];\n      if (triggerOn) {\n        let actualParams = Object.assign({}, sound.params);\n        Audio.scheduleAudio(sound.name, when, actualParams, this.props.effects);\n      }\n    });\n  }\n\n  renderTracknames() {\n    return this.props.sounds.map(sound => (\n        <li\n          key={sound.id}\n          className=\"Sequencer-track-label\"\n          onClick={this.handleClickTrackname.bind(this,sound.name)}\n        >\n          <button\n            className={classnames(\n              'Sequencer-track-indicator',\n              {active: this.state.enabledTracks[sound.name]}\n            )}\n          />\n          <div\n            className=\"Sequencer-track-name\"\n          >\n            {sound.name}\n          </div>\n        </li>\n      )\n    );\n  }\n\n  renderTracks(sequence) {\n    return this.props.sounds.map(sound => (\n        <Track\n          key={sound.id}\n          enabled={this.state.enabledTracks[sound.name]}\n          trackname={sound.name}\n          sequence={sequence[sound.name]}\n          onClickTouchPad={this.handleClickTouchPad}\n        />\n      )\n    );\n  }\n\n  render() {\n    const { isPlaying, currentStep, sequence } = this.state;\n    const { bpm } = this.state.clockParams;\n    const { effects } = this.props;\n    return (\n      <div className=\"Sequencer\">\n        <Controls\n          bpm={bpm}\n          isPlaying={isPlaying}\n        />\n        <Effects\n          settings={effects}\n          onClick={this.handleClickEffects}\n        />\n        <RunningLights\n          active={isPlaying}\n          currentStep={currentStep}\n        />\n        <div className=\"Sequencer-sequencer\">\n          <ul className=\"Sequencer-tracklist\">\n            {this.renderTracknames()}\n          </ul>\n          <div className=\"Sequencer-track-container\">\n            {this.renderTracks(sequence)}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nSequencer.propTypes = {\n  beat: PropTypes.object.isRequired,\n  sounds: PropTypes.array.isRequired,\n  effects: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => {\n    const sounds = state.get('sounds');\n    const effects = state.get('effects');\n    return {\n      sounds,\n      effects\n    }\n}\nexport default connect(mapStateToProps)(Sequencer);\n","import React, {Component} from 'react';\nimport { connect } from 'react-redux';\n\nimport Sequencer from './Sequencer';\nimport './App.css';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedBeat: void 0\n    };\n    this.handleBeatSelected = this.handleBeatSelected.bind(this);\n  }\n\n  handleBeatSelected(event) {\n    this.setState({\n      selectedBeat: event.target.value\n    });\n  }\n\n  componentDidMount() {\n    const beatKeys = this.props.beats.map(beat => beat.key);\n    this.setState({\n      selectedBeat: beatKeys.length > 0 ? beatKeys[0] : void 0\n    })\n  }\n\n  renderBeatSelect() {\n    const options = this.props.beats.map(beat => (\n        <option\n          key={beat.key}\n          value={beat.key}\n        >\n          {beat.name}\n        </option>\n      )\n    );\n\n    return (\n      <select\n        value={this.state.selectedBeat}\n        onChange={this.handleBeatSelected}\n        className='App--beat-select'\n      >\n        {options}\n      </select>\n    );\n  }\n\n  render () {\n    const beat = this.props.beats.find(beat => beat.key === this.state.selectedBeat);\n    return (\n      <div className=\"App\">\n        {this.renderBeatSelect()}\n        {beat ? \n          <Sequencer\n            beat={beat}\n          />\n        : null}\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  const beats = state.get('beats');\n  return {\n    beats\n  }\n}\n\nexport default connect(mapStateToProps)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './app/store';\n\nimport './index.css';\nimport App from './app/App';\n\nReactDOM.render(\n    <Provider store={store} >\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}