{"version":3,"sources":["assets/sounds/RT_Ian_Chang_Kick_1_Drums_Ian_Chang_one_shot.wav","assets/sounds/RT_Ian_Chang_Tea_Towel_Snare_1_Medium_1_Drums_Ian_Chang_one_shot.wav","assets/sounds/Hat_XL_13.wav","app/actions/effectsActions.js","app/store/reducers/effectsReducer.js","app/store/dataSource/effects.js","app/store/reducers/soundsReducer.js","app/store/dataSource/sounds.js","app/store/dataSource/beats.js","app/store/reducers/beatsReducer.js","app/store/index.js","app/util/BufferLoader.js","app/util/AudioService.js","app/util/distortionCurve.js","app/util/Clock.js","app/components/sequencer/TouchPad.js","app/components/sequencer/Track.js","app/components/sequencer/Controls.js","app/components/generic/SquareBacklitButton.js","app/components/sequencer/Effects.js","app/components/sequencer/RunningLights.js","app/components/sequencer/Sequencer.js","app/components/synth/TrackPad.js","app/components/synth/WaveformSelector.js","app/components/synth/Synth.js","app/App.js","index.js"],"names":["module","exports","Constants","TOGGLE_EFFECT","initialState","Immutable","fromJS","compressor","enabled","distortion","highpass","lowpass","id","name","src","kick","params","gain","snare","hat","key","bpm","subdivision","sequence","rootReducer","combineReducers","effects","state","action","type","effectName","path","effectState","getIn","setIn","toggleEffect","sounds","beats","store","createStore","BufferLoader","context","fileList","this","bufferList","loadCount","prototype","loadBuffer","file","index","Promise","resolve","reject","request","XMLHttpRequest","open","responseType","loader","onload","decodeAudioData","response","buffer","err","onerror","send","load","promises","i","length","push","all","HIGH_PASS_Hz","LOW_PASS_Hz","DISTORTION_CURVE","amount","k","curve","Float32Array","deg","Math","PI","x","abs","distortionCurve","WAVEFORM","SINE","TRIANGLE","SAW","SQUARE","EFFECTS","handleSamplesLoaded","files","forEach","trackBuffers","makeFilter","audioCtx","opts","filter","createBiquadFilter","frequency","setValueAtTime","currentTime","audioService","AudioContext","masterChannel","osc","createOscillator","oscGainNode","createGain","oscFilter","scheduleAudio","bind","oscillateOn","then","stuff","call","catch","error","console","bufferName","time","source","createBufferSource","node","gainNode","connect","createDynamicsCompressor","threshold","knee","ratio","attack","release","makeCompressor","waveShaper","createWaveShaper","oversample","makeDistortion","applyEffects","destination","start","pitch","stop","calcStepDurationMillis","clock","startTime","expectedTime","actualTime","isRunning","timeoutId","interval","currentStep","step","setBPM","setParams","Audio","getCurrentTime","emit","clearTimeout","diff","setTimeout","EventEmitter","TouchPad","props","className","classnames","active","disabled","onClick","Track","html","onClickTouchPad","trackname","renderTouchPads","Controls","BPM","isPlaying","Clock","value","min","max","onChange","onChangeBPM","SquareBacklitButton","label","Effects","settings","map","effect","RunningLights","idx","renderLights","setEnabledTracks","tracksEnabled","sound","setClockParamsFromProps","beat","mapBeatDataToState","beatKey","enabledTracks","Sequencer","Object","assign","handleClickTouchPad","handleClickTrackname","handleClickEffects","handleClockStep","handleClockStart","handleClockStop","handleChangeBPM","scheduleSequenceStep","handleKeyDown","togglePlayback","addListener","document","addEventListener","loadAudio","removeEventListener","removeListener","event","preventDefault","which","setState","log","clockStep","sequenceStep","target","soundName","track","updatedSeq","dispatch","when","actualParams","renderTracknames","renderTracks","Component","get","TrackPad","keyOn","mouseOn","handleMouseEnter","handleMouseLeave","handleMouseMove","handleKeyUp","isEnabled","handleChangeState","pageX","pageY","rect","getBoundingClientRect","touchPadX","left","touchPadY","top","onMouseMove","y","onMouseEnter","onMouseLeave","WaveformSelector","selection","selected","keys","onSelect","Synth","trackPadEnabled","handleTrackPadMove","handleTrackPadChange","handleWaveformSelected","pos","C6","setOscPitch","oscillateOff","setOscWaveform","App","selectedBeat","handleBeatSelected","beatKeys","options","find","renderBeatSelect","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.ed81830a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/RT_Ian_Chang_Kick_1_Drums_Ian_Chang_one_shot.e1d4e232.wav\";","module.exports = __webpack_public_path__ + \"static/media/RT_Ian_Chang_Tea_Towel_Snare_1_Medium_1_Drums_Ian_Chang_one_shot.bb5dc9f1.wav\";","module.exports = __webpack_public_path__ + \"static/media/Hat_XL_13.faea9d0d.wav\";","export const Constants = {\n    TOGGLE_EFFECT: 'TOGGLE_EFFECT'\n};\n\n/*\n * action creators\n */\n\nexport function toggleEffect(effectName) {\n    return {\n        type: Constants.TOGGLE_EFFECT,\n        effectName\n    };\n};\n","import Immutable from 'immutable';\nimport effects from '../dataSource/effects';\nimport { Constants } from '../../actions/effectsActions';\n\nconst initialState = Immutable.fromJS(effects);\n\nfunction toggleEffect(state, effectName) {\n    const path = [effectName,'enabled'];\n    const effectState = state.getIn(path);\n    return state.setIn(path, !effectState);\n}\n\nexport default function effectsReducer(state, action) {\n    if (typeof state === 'undefined') {\n      return initialState\n    }\n  \n    switch (action.type) {\n        case Constants.TOGGLE_EFFECT:\n          return toggleEffect(state, action.effectName);\n        default:\n          return state;\n      }\n}\n","export default {\n    compressor: {\n      enabled: false\n    },\n    distortion: {\n      enabled: false\n    },\n    highpass: {\n      enabled: true\n    },\n    lowpass: {\n      enabled: false\n    }\n}","import sounds from '../dataSource/sounds';\n\nconst initialState = sounds;\n\nexport default function soundsReducer(state, action) {\n    if (typeof state === 'undefined') {\n      return initialState\n    }\n  \n    // For now, don't handle any actions\n    // and just return the state given to us.\n    return state\n}\n","import kick from '../../../assets/sounds/RT_Ian_Chang_Kick_1_Drums_Ian_Chang_one_shot.wav';\nimport snare from '../../../assets/sounds/RT_Ian_Chang_Tea_Towel_Snare_1_Medium_1_Drums_Ian_Chang_one_shot.wav';\nimport hat from '../../../assets/sounds/Hat_XL_13.wav';\n\nexport default [\n  {\n    id: 0,\n    name:'kick',\n    src: kick,\n    params: {\n      gain: 0.4\n    }\n  },\n  {\n    id:1,\n    name:'snare',\n    src: snare,\n    params: {\n    gain: 0.6\n    }\n  },\n  {\n    id: 2,\n    name:'hat',\n    src: hat,\n    params: {\n      gain: 0.2\n    }\n  }\n];\n","/**\n * DEMO DATA in absence of a DB to read/write.\n * */\n\nconst NEW = {\n    key: 'NEW',\n    name: 'NEW',\n    bpm: 120,\n    subdivision: 16,\n    sequence: {\n        kick:  [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\n        snare: [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\n        hat:   [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]\n    }\n}\n\nconst FOUR_ON_THE_FLOOR = {\n    key: 'FOUR_ON_THE_FLOOR',\n    name: '4 On The Floor',\n    bpm: 112,\n    subdivision: 16,\n    sequence: {\n        kick:  [1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0],\n        snare: [0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0],\n        hat:   [0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0]\n    }\n}\n\nconst HIP_HOP = {\n    bpm: \"116\",\n    key: \"HIP_HOP\",\n    name: \"Hip Hop\",\n    sequence: {\n        hat:    [1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0],\n        kick:   [1,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0],\n        snare:  [0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0]\n    },\n    subdivision: 16\n}\n\nconst WONKY_ROCK = {\n    bpm: \"108\",\n    key: \"WONKY_ROCK\",\n    name: \"Wonky Rock\",\n    sequence: {\n        hat:    [1,0,1,0,0,1,0,1,0,0,1,0,1,0,1,0],\n        kick:   [1,0,0,0,0,0,1,0,0,1,0,1,0,0,0,0],\n        snare:  [0,0,0,0,1,0,0,0,1,0,0,0,0,1,0,0]\n    },\n    subdivision: 16\n}\n\nconst THREE_AGAINST_FOUR = {\n    key: 'THREE_AGAINST_FOUR',\n    bpm: '140',\n    name: '3 Against 4',\n    sequence: {\n        hat:    [1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0],\n        kick:   [1,0,0,1,0,0,1,0,0,1,0,0,0,0,1,0],\n        snare:  [0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0],\n    },\n    subdivision: 16\n}\n\nconst THRASH = {\n    bpm: '220',\n    key: 'THRASH',\n    name: 'Thrash',\n    sequence: {\n        hat:    [1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0],\n        kick:   [1,0,1,1,0,0,1,0,1,0,1,0,0,0,1,0],\n        snare:  [0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0],\n    },\n    subdivision: 16\n}\n\nconst EXCUSE_ME = {\n    key: 'EXCUSE_ME',\n    bpm: '300',\n    name: 'EXCUSE ME',\n    sequence: {\n        hat:    [1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0],\n        kick:   [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],\n        snare:  [0,1,1,0,1,1,1,0,0,0,1,1,1,1,1,1]\n    },\n    subdivision: 16\n}\n\nexport default [\n    NEW,\n    FOUR_ON_THE_FLOOR,\n    HIP_HOP,\n    WONKY_ROCK,\n    THREE_AGAINST_FOUR,\n    THRASH,\n    EXCUSE_ME\n];","import beats from '../dataSource/beats';\n\nconst initialState = beats;\n\nexport default function beatsReducer(state, action) {\n    if (typeof state === 'undefined') {\n      return initialState\n    }\n  \n    // For now, don't handle any actions\n    // and just return the state given to us.\n    return state\n}\n","import { createStore } from 'redux';\nimport { combineReducers } from 'redux-immutable';\n\nimport effectsReducer from './reducers/effectsReducer';\nimport soundsReducer from './reducers/soundsReducer';\nimport beatsReducer from './reducers/beatsReducer';\n\nconst rootReducer = combineReducers({\n    effects: effectsReducer,\n    sounds: soundsReducer,\n    beats: beatsReducer\n  });\n\nconst store = createStore(rootReducer);\nexport default store;","import Promise from 'bluebird';\n\nfunction BufferLoader(context, fileList) {\n    this.context = context;\n    this.fileList = fileList;\n    this.bufferList = []\n    this.loadCount = 0;\n}\n\nBufferLoader.prototype.loadBuffer = function(file, index) {\n    return new Promise((resolve, reject) => {\n        // Load buffer asynchronously\n        let request = new XMLHttpRequest();\n        request.open(\"GET\", file.src, true);\n        request.responseType = \"arraybuffer\";\n\n        let loader = this;\n\n        request.onload = function() {\n            // Asynchronously decode the audio file data in request.response\n            loader.context.decodeAudioData(\n                request.response,\n                function(buffer) {\n                    if (!buffer) {\n                        reject('error decoding file data: ' + file.src);\n                    }\n                    loader.loadCount++;\n                    loader.bufferList[index] = {\n                        name: file.name,\n                        buffer: buffer\n                    };\n                    resolve({\n                        name: file.name,\n                        buffer: buffer\n                    });\n                },\n                function(err) {\n                    reject(err);\n                }\n            );\n        }\n\n        request.onerror = function(err) {\n            reject(err);\n        }\n\n        request.send();\n    });\n}\n\nBufferLoader.prototype.load = function() {\n    let promises = [];\n    for (var i = 0; i < this.fileList.length; ++i) {\n        promises.push(this.loadBuffer(this.fileList[i], i));\n    }\n\n    return Promise.all(promises);\n}\n\nexport default BufferLoader;","import BufferLoader from './BufferLoader';\nimport distortionCurve from './distortionCurve';\n\nconst HIGH_PASS_Hz = 750;\nconst LOW_PASS_Hz = 500;\nconst DISTORTION_AMOUNT = 33;\nconst DISTORTION_CURVE = distortionCurve(DISTORTION_AMOUNT);\n\nexport const WAVEFORM = {\n    SINE: \"sine\",\n    TRIANGLE: \"triangle\",\n    SAW: \"sawtooth\",\n    SQUARE: \"square\"\n}\n\nexport const EFFECTS = [\n    'compressor',\n    'distortion',\n    'highpass',\n    'lowpass'\n]\n\nclass AudioService {\n    constructor() {\n        this.audioCtx = new AudioContext();\n        this.trackBuffers = [];\n        this.masterChannel = [];        \n\n        this.osc = this.audioCtx.createOscillator();\n        this.osc.type = WAVEFORM.SAW;\n\n        this.oscGainNode = this.audioCtx.createGain();\n        this.oscGainNode.gain.setValueAtTime(0.05, this.audioCtx.currentTime);\n        this.oscFilter = this.audioCtx.createBiquadFilter();\n        this.oscFilter.type = 'lowshelf';\n        this.oscFilter.gain.setValueAtTime(20, this.audioCtx.currentTime);\n        \n        this.scheduleAudio = this.scheduleAudio.bind(this);\n        this.oscillateOn = this.oscillateOn.bind(this);\n    }\n\n    loadAudio(files) {\n        let bufferLoader = new BufferLoader(\n            this.audioCtx,\n            files\n          );\n        \n        bufferLoader.load()\n            .then((stuff) => {\n                handleSamplesLoaded.call(this, stuff);\n            })\n            .catch((error) => {\n                console.error(error);\n            });\n    }\n\n    scheduleAudio(bufferName, time, params, effects) {\n        let audioCtx = this.audioCtx;\n        // console.log(`schedule: @${time || 'now'}. currentTime: ${this.audioCtx.currentTime}`);\n        let source = audioCtx.createBufferSource();\n        source.buffer = this.trackBuffers[bufferName]\n        \n        // run through effects options\n        let node = applyEffects(source, audioCtx, params, effects);\n        \n        node.connect(audioCtx.destination);\n        source.start(time);\n    }\n\n    oscillateOn(type, pitch) {\n        this.osc.type = type; // see WAVEFORM\n        this.osc.frequency.setValueAtTime(pitch, this.audioCtx.currentTime); // value in hertz\n        this.osc.connect(this.oscGainNode);\n        this.oscGainNode.connect(this.oscFilter);\n        this.oscFilter.connect(this.audioCtx.destination);\n        // go!\n        this.osc.start();\n    }\n\n    oscillateOff() {\n        try {\n            this.osc.stop();\n        } catch(err) {\n            console.error(err);\n        } finally {\n            this.osc = this.audioCtx.createOscillator();\n        }\n    }\n\n    setOscPitch(pitch) {\n        this.osc.frequency.setValueAtTime(pitch, this.audioCtx.currentTime);\n    }\n\n    setOscWaveform(type) {\n        this.osc.type = type;\n    }\n\n    getCurrentTime() {\n        return this.audioCtx.currentTime;\n    }\n}\n\nfunction handleSamplesLoaded(files) {\n    files.forEach(file => {\n      this.trackBuffers[file.name] = file.buffer;\n    });\n}\n\nfunction applyEffects(node, audioCtx, params, effects) {\n    if (params && params.gain) {\n        let gainNode = audioCtx.createGain();\n        gainNode.gain.setValueAtTime(params.gain, audioCtx.currentTime);\n        node.connect(gainNode);\n        node = gainNode;\n    }\n\n    if (effects && effects.getIn(['compressor','enabled'])) {\n        let compressor = makeCompressor(audioCtx);\n        node.connect(compressor);\n        node = compressor;\n    }\n\n    if (effects && effects.getIn(['distortion','enabled'])) {\n        let distortion = makeDistortion(audioCtx);\n        node.connect(distortion);\n        node = distortion;\n    }\n\n    if (effects && effects.getIn(['highpass','enabled'])) {\n        let highpass = makeFilter(audioCtx, {type: 'highpass', frequency: HIGH_PASS_Hz});\n        node.connect(highpass);\n        node = highpass;\n    }\n\n    if (effects && effects.getIn(['lowpass','enabled'])) {\n        let lowpass = makeFilter(audioCtx, {type: 'lowpass', frequency: LOW_PASS_Hz});\n        node.connect(lowpass);\n        node = lowpass;\n    }\n\n    return node;\n}\n\nfunction makeCompressor(audioCtx) {\n    let compressor = audioCtx.createDynamicsCompressor();\n    compressor.threshold.setValueAtTime(-50, audioCtx.currentTime);\n    compressor.knee.setValueAtTime(40, audioCtx.currentTime);\n    compressor.ratio.setValueAtTime(12, audioCtx.currentTime);\n    compressor.attack.setValueAtTime(0.25, audioCtx.currentTime);\n    compressor.release.setValueAtTime(0.67, audioCtx.currentTime);\n    return compressor;\n}\n\nfunction makeFilter(audioCtx, opts) {\n    let filter = audioCtx.createBiquadFilter();\n    filter.type = opts.type;\n    if (opts.frequency) {\n        filter.frequency.setValueAtTime(opts.frequency, audioCtx.currentTime);\n    }\n    return filter;\n}\n\nfunction makeDistortion(audioCtx) {\n    let waveShaper = audioCtx.createWaveShaper();\n    waveShaper.curve = DISTORTION_CURVE;\n    waveShaper.oversample = '4x';\n    return waveShaper;\n}\n\nconst audioService = new AudioService();\nexport default audioService;","/**\n * Recipe for a distortion curve, taken from \n * https://code-examples.net/en/docs/dom/waveshapernode\n * \n * @param {Number} amount \n */\nexport default function distortionCurve(amount) {\n    const k = typeof amount === 'number' ? amount : 50;\n    const n_samples = 44100;\n    const curve = new Float32Array(n_samples);\n    const deg = Math.PI / 180;\n\n    for (let i = 0 ; i < n_samples; i++ ) {\n      let x = i * 2 / n_samples - 1;\n      curve[i] = ( 3 + k ) * x * 20 * deg / ( Math.PI + k * Math.abs(x) );\n    }\n    return curve;\n};\n","import { EventEmitter } from 'events';\nimport Audio from './AudioService';\n\n/**\n * Calculate the duration in milliseconds of 1 sequence step.\n * @param {Number} bpm              beats per minute\n * @param {Number} subdivision      rhythmic value of one sequence step (eg: quarter, 8th, 16th note)\n */\nfunction calcStepDurationMillis(bpm, subdivision) {\n    \n    // quarter note;\n    const beatValue = 4;\n\n    // return-value units per minute\n    const ms = 60000;\n\n    // (millis per min / beats per min) * (beat value / sequence-step value)\n    return ( ms / bpm ) * ( beatValue / subdivision );\n}\n\nclass Clock extends EventEmitter {\n    constructor() {\n        super();\n\n        // input parameters (defaults)\n        this.subdivision = void 0;\n        this.bpm = void 0;        \n\n        // timer variables\n        this.startTime = 0;\n        this.expectedTime = 0;      // expected time-elapsed\n        this.actualTime = 0;        // actual time-elapsed\n        \n        // run-time vars\n        this.isRunning = false;\n        this.timeoutId = null;\n        this.interval = calcStepDurationMillis(this.bpm, this.subdivision);\n        this.currentStep = 0;\n\n        // method bindings\n        this.start = this.start.bind(this);\n        this.stop = this.stop.bind(this);\n        this.step = this.step.bind(this);\n        this.setBPM = this.setBPM.bind(this);\n        this.setParams = this.setParams.bind(this)\n    }\n\n    start() {\n        if (this.isRunning) {\n            return;\n        }        \n        \n        // reset timing variables\n        this.startTime = Audio.getCurrentTime();\n        this.expectedTime = 0;\n        this.actualTime = 0;\n\n        this.currentStep = 0;\n        this.isRunning = true;\n        \n        this.emit('start');\n        this.step();\n    }\n\n    stop() {\n        this.isRunning = false;\n        clearTimeout(this.timeoutId);\n        this.emit('stop');\n    }\n\n    step() {\n        // how much time actually elapsed?\n        this.actualTime = Audio.getCurrentTime() - this.startTime;\n        // console.warn(`ACTUAL ${this.actualTime}`)\n        // console.warn(`EXPECTED ${this.expectedTime}`)\n\n        // get the diff: actualTime is >= than expectedTime due to the potential lag in `setTimeout` function.\n        var diff = this.actualTime - this.expectedTime;\n        // console.warn(`TIMEOUT ${this.interval - diff}`)\n        this.timeoutId = setTimeout(this.step, this.interval - diff)\n        \n\n        this.emit('step', this.currentStep);\n        this.currentStep++;\n        this.expectedTime += this.interval / 1000;\n    }\n    \n    setBPM(bpm) {\n        this.bpm = bpm;\n        this.interval = calcStepDurationMillis(bpm, this.subdivision);\n    }\n\n    setParams(params) {\n        // assignment order matters.\n        this.subdivision = params.subdivision;\n        this.setBPM(params.bpm)\n    }\n}\n\nconst clock = new Clock();\nexport default clock;\n","import React from 'react';\nimport classnames from 'classnames';\nimport './TouchPad.css';\n\nfunction TouchPad(props) {\n  return (\n        <li\n            className={classnames(\n              'TouchPad-container',\n              {\n                active: props.active,\n                disabled: props.disabled\n              }\n            )}\n            onClick={props.onClick}\n        />\n  );\n}\n\nexport default TouchPad;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Track.css';\n\nimport TouchPad from './TouchPad';\n\nfunction renderTouchPads(props) {\n    const { length } = props\n    let html = [];\n    for (let step = 0; step < length; step++) {\n        html.push(\n            <TouchPad\n                key={`touch-pad-${step}`}\n                active={props.sequence[step]}\n                disabled={!props.enabled}\n                onClick={props.onClickTouchPad.bind(null, props.trackname, step)}\n            />\n        )\n    }\n    return html;\n}\n\nexport default function Track(props) {\n    return (\n        <ul className=\"Track-container\">\n            {renderTouchPads(props)}\n        </ul>\n    );\n}\n\nTrack.propTypes = {\n    trackname: PropTypes.string,\n    sequence: PropTypes.array,\n    onClickTouchPad: PropTypes.func\n};\n\n","import React from 'react';\nimport classnames from 'classnames';\nimport './Controls.css';\n\nimport Clock from '../../util/Clock';\n\nexport default function Controls(props) {\n    const BPM = props.bpm;\n    return (\n        <ul\n            className={classnames(\"Controls-container\", {active: props.active})}\n            onClick={props.onClick}\n        >\n            <li className={classnames('play', 'playback')}>\n                <button \n                    className={classnames('play', {active: props.isPlaying})}\n                    onClick={Clock.start}\n                >\n                    play_arrow\n                </button>\n                <button\n                    className={classnames('stop', {active: props.isPlaying})}\n                    onClick={Clock.stop}\n                >\n                    stop\n                </button>\n            </li>\n            <li className=\"bpm-slider-container\">\n                <input\n                    className=\"bpm-slider\"\n                    type=\"range\"\n                    value={BPM}\n                    min={10}\n                    max={300}\n                    onChange={props.onChangeBPM}\n                />\n            </li>\n            <li className=\"bpm-readout\">\n                <div>{BPM}</div>\n            </li>\n        </ul>\n    );\n}\n","import React from 'react'\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport './SquareBacklitButton.css';\n\nexport default function SquareBacklitButton(props) {\n    return (\n        <button\n            className={classnames('SquareBacklitButton--button',{enabled: props.enabled})}\n            onClick={props.onClick}\n        >\n            {props.label}\n        </button>\n    )\n}\n\nSquareBacklitButton.propTypes = {\n    label: PropTypes.string,\n    enabled: PropTypes.bool,\n    onClick: PropTypes.func.isRequired\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Immutable from 'immutable';\nimport SquareBacklitButton from '../generic/SquareBacklitButton';\nimport './Effects.css';\n\nimport { EFFECTS } from '../../util/AudioService';\n\nexport default function Effects(props) {\n    function renderButtons(settings) {\n        return EFFECTS.map(effect => (\n            <SquareBacklitButton\n                key={effect}\n                label={effect}\n                enabled={settings.getIn([effect,'enabled'])}\n                onClick={() => {\n                    props.onClick(effect);\n                }}\n            />\n        ))\n    }\n\n    return (\n        <div\n            className={'Effects-container'}\n        >\n            {renderButtons(props.settings)}\n        </div>\n    );\n}\n\nEffects.propTypes = {\n    settings: PropTypes.instanceOf(Immutable.Map)\n}","import React from 'react';\nimport classnames from 'classnames';\nimport './RunningLights.css';\n\nfunction renderLights(length, props) {\n    let html = [];\n    for (let idx = 0; idx < length; idx++) {\n        html.push(\n            <div \n                key={`running-light-${idx}`}\n                className={classnames(\"RunningLights-light\", {'active': props.active && props.currentStep === idx})}\n            />\n        )\n    }\n    return html;\n}\n\nexport default function RunningLights(props) {\n    let { length } = props;\n    return (\n        <ul className=\"RunningLights-container\">\n            {renderLights(length, props)}\n        </ul>\n    );\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport {Component} from 'react';\nimport classnames from 'classnames';\n\nimport Clock from '../../util/Clock';\nimport Audio from '../../util/AudioService';\n\nimport Track from './Track';\nimport Controls from './Controls';\nimport Effects from './Effects';\nimport RunningLights from './RunningLights';\n\nimport { toggleEffect } from '../../actions/effectsActions';\n\nimport './Sequencer.css';\n\nconst SEQUENCE_LENGTH = 16;\n\nconst setEnabledTracks = sounds => {\n  let tracksEnabled = {};\n  sounds.forEach(sound => {\n    tracksEnabled[sound.name] = true\n  });\n  return tracksEnabled;\n}\n\nconst setClockParamsFromProps = (props) => {\n    Clock.setParams({\n      bpm: props.beat.bpm,\n      subdivision: props.beat.subdivision\n    });\n}\n\nconst mapBeatDataToState = props => {\n  return {\n    beatKey: props.beat.key,\n\n    // Control BPM value\n    bpm: props.beat.bpm,\n\n    // Control track-enabled state\n    enabledTracks: setEnabledTracks(props.sounds),\n\n    // Control sequence editing\n    sequence: props.beat.sequence\n  }\n}\n\nclass Sequencer extends Component {\n  constructor(props) {\n    super(props);\n\n    let state = {  \n      // Control playback state\n      isPlaying: false,\n\n      // Control sequencer cursor\n      currentStep: 0,\n    };\n\n    this.state = Object.assign({}, state, mapBeatDataToState(props));\n\n    this.handleClickTouchPad = this.handleClickTouchPad.bind(this);\n    this.handleClickTrackname = this.handleClickTrackname.bind(this);\n    this.handleClickEffects = this.handleClickEffects.bind(this);\n    this.handleClockStep = this.handleClockStep.bind(this);\n    this.handleClockStart = this.handleClockStart.bind(this);\n    this.handleClockStop = this.handleClockStop.bind(this);\n    this.handleChangeBPM = this.handleChangeBPM.bind(this);\n    this.scheduleSequenceStep = this.scheduleSequenceStep.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    this.togglePlayback = this.togglePlayback.bind(this);\n  }\n\n  componentDidMount() {\n    Clock.addListener('start', this.handleClockStart);\n    Clock.addListener('stop', this.handleClockStop);\n    Clock.addListener('step', this.handleClockStep);\n    document.addEventListener('keydown', this.handleKeyDown);\n\n    Audio.loadAudio(this.props.sounds);\n    setClockParamsFromProps(this.props);\n  }\n\n  componentWillUnmount() {\n      document.removeEventListener('keydown', this.handleKeyDown);\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    if (props.beat.key !== state.beatKey) {\n      // loaded a new beat\n      if (state.isPlaying) Clock.stop();\n      setClockParamsFromProps(props);\n      state = mapBeatDataToState(props);\n    }\n\n    return state;\n  }\n\n  componentWillUnmount() {\n    Clock.stop();\n    Clock.removeListener('start', this.handleClockStart);\n    Clock.removeListener('stop', this.handleClockStop);\n    Clock.removeListener('step', this.handleClockStep);\n  }\n\n  handleKeyDown(event) {\n    event.preventDefault();\n    // check key code SHIFT\n    const key = event.which || event.key\n    if (key === 32 || key === 'Space') {\n        this.togglePlayback()\n    }\n  }\n\n  togglePlayback() {\n    if (this.state.isPlaying) {\n      Clock.stop();\n    } else {\n      Clock.start();\n    }\n  }\n\n  /**\n   * The clock started. Update state.\n   */\n  handleClockStart() {\n    this.setState({\n      isPlaying: true\n    });\n\n    console.log({\n      key: this.state.beatKey,\n      bpm: this.props.beat.bpm,\n      subdivision: this.props.beat.subdivision,\n      sequence: this.state.sequence\n    })\n  }\n\n  /**\n   * The clock stopped. Stop & reset the sequence.\n   */\n  handleClockStop() {\n    this.setState({\n      isPlaying: false,\n      currentStep: 0\n    });\n  }\n\n  /**\n   * The clock ticked. Do update.\n   * @param {Number} clockStep   The nth step the clock has ticked since starting; 0 start.\n   */\n  handleClockStep(clockStep) {\n    let sequenceStep = clockStep % SEQUENCE_LENGTH;\n    this.scheduleSequenceStep(sequenceStep, Audio.getCurrentTime());\n    this.setState({\n      currentStep: sequenceStep\n    });\n  }\n\n  handleChangeBPM(event) {\n    const { value } = event.target;\n    this.setState({\n      bpm: value\n    });\n    Clock.setBPM(value);\n  }\n\n  handleClickTrackname(soundName) {\n    const enabledTracks = Object.assign({}, this.state.enabledTracks);\n    enabledTracks[soundName] = !enabledTracks[soundName];\n    this.setState({\n      enabledTracks: enabledTracks\n    });\n  }\n\n  handleClickTouchPad(track, step) {\n    // copy the sequence array before performing update\n    let updatedSeq = Object.assign({}, this.state.sequence);\n\n    // toggle the on/off state\n    updatedSeq[track][step] = !updatedSeq[track][step];\n\n    this.setState({\n      sequence: updatedSeq\n    })\n  }\n\n  handleClickEffects(effectName) {\n    this.props.dispatch(toggleEffect(effectName));\n  }\n\n  scheduleSequenceStep(step, when) {\n    this.props.sounds.forEach(sound => {\n      if (!this.state.enabledTracks[sound.name]) {\n        return;\n      }\n      let triggerOn = this.state.sequence[sound.name][step];\n      if (triggerOn) {\n        let actualParams = Object.assign({}, sound.params);\n        Audio.scheduleAudio(sound.name, when, actualParams, this.props.effects);\n      }\n    });\n  }\n\n  renderTracknames() {\n    return this.props.sounds.map(sound => (\n        <li\n          key={sound.id}\n          className=\"Sequencer-track-label\"\n          onClick={this.handleClickTrackname.bind(this,sound.name)}\n        >\n          <button\n            className={classnames(\n              'Sequencer-track-indicator',\n              {active: this.state.enabledTracks[sound.name]}\n            )}\n          />\n          <div\n            className=\"Sequencer-track-name\"\n          >\n            {sound.name}\n          </div>\n        </li>\n      )\n    );\n  }\n\n  renderTracks(sequence) {\n    return this.props.sounds.map(sound => (\n        <Track\n          key={sound.id}\n          enabled={this.state.enabledTracks[sound.name]}\n          trackname={sound.name}\n          sequence={sequence[sound.name]}\n          length={SEQUENCE_LENGTH}\n          onClickTouchPad={this.handleClickTouchPad}\n        />\n      )\n    );\n  }\n\n  render() {\n    const { isPlaying, currentStep, sequence, bpm } = this.state;\n    const { effects } = this.props;\n    return (\n      <div className=\"Sequencer\">\n        <Controls\n          bpm={bpm}\n          onChangeBPM={this.handleChangeBPM}\n          isPlaying={isPlaying}\n        />\n        <Effects\n          settings={effects}\n          onClick={this.handleClickEffects}\n        />\n        <RunningLights\n          active={isPlaying}\n          length={SEQUENCE_LENGTH}\n          currentStep={currentStep}\n        />\n        <div className=\"Sequencer-sequencer\">\n          <ul className=\"Sequencer-tracklist\">\n            {this.renderTracknames()}\n          </ul>\n          <div className=\"Sequencer-track-container\">\n            {this.renderTracks(sequence)}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nSequencer.propTypes = {\n  beat: PropTypes.object.isRequired,\n  sounds: PropTypes.array.isRequired,\n  effects: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => {\n    const sounds = state.get('sounds');\n    const effects = state.get('effects');\n    return {\n      sounds,\n      effects\n    }\n}\nexport default connect(mapStateToProps)(Sequencer);\n","import React, { Component } from 'react'\nimport classnames from 'classnames';\nimport './TrackPad.css';\n\nexport default class TrackPad extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n            keyOn: false,\n            mouseOn: false\n        }\n\n        this.handleMouseEnter = this.handleMouseEnter.bind(this);\n        this.handleMouseLeave = this.handleMouseLeave.bind(this);\n        this.handleMouseMove = this.handleMouseMove.bind(this)\n        this.handleKeyDown = this.handleKeyDown.bind(this);\n        this.handleKeyUp = this.handleKeyUp.bind(this);\n        this.isEnabled = this.isEnabled.bind(this);\n        this.handleChangeState = this.handleChangeState.bind(this);\n    }\n    \n    componentDidMount() {\n        document.addEventListener('keydown', this.handleKeyDown);\n        document.addEventListener('keyup', this.handleKeyUp);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('keydown', this.handleKeyDown);\n        document.removeEventListener('keyup', this.handleKeyUp);\n    }\n\n    handleChangeState(key, value) {\n        this.setState({\n            [key]: value\n        }, () => {\n            this.props.onChange(this.isEnabled());\n        });\n    }\n\n    handleKeyDown(event) {\n        // check key code SHIFT\n        const key = event.which || event.key\n        if (key === 16 || key === 'Shift') {\n            this.handleChangeState('keyOn', true);\n        }\n    }\n    \n    handleKeyUp(event) {\n        // check key code SHIFT\n        const key = event.which || event.key;\n        if (key === 16 || key === 'Shift') {\n            this.handleChangeState('keyOn', false);\n        }\n    }\n\n    handleMouseEnter() {\n        this.handleChangeState('mouseOn', true);\n    }\n\n    handleMouseLeave() {\n        this.handleChangeState('mouseOn', false);\n    }\n\n    handleMouseMove(event) {\n        const { pageX, pageY } = event;\n        const rect = event.target.getBoundingClientRect();\n        const touchPadX = pageX - rect.left;\n        const touchPadY = pageY - rect.top;\n        this.props.onMouseMove({\n            x: touchPadX,\n            y: touchPadY\n        });\n    }\n\n    isEnabled() {\n        return this.state.keyOn && this.state.mouseOn;\n    }\n\n    render() {\n        const isEnabled = this.isEnabled();\n        return (\n            <div\n                className={classnames('TrackPad--container', {active: isEnabled})}\n                onMouseEnter={this.handleMouseEnter}\n                onMouseLeave={this.handleMouseLeave}\n                onMouseMove={this.handleMouseMove}\n            />                \n        )\n    }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Immutable from 'immutable';\nimport './WaveformSelector.css';\n\nimport { WAVEFORM } from '../../util/AudioService';\nimport SquareBacklitButton from '../generic/SquareBacklitButton';\n\nexport default function WaveformSelector(props) {\n\n    function renderButtons(selection) {\n\n        return Object.keys(WAVEFORM).map(key => {\n            const type = WAVEFORM[key];\n            return (\n            <SquareBacklitButton\n                key={key}\n                label={type}\n                enabled={selection === type}\n                onClick={() => {\n                    props.onSelect(type);\n                }}\n            />\n        )})\n    }\n\n    return (\n        <div\n            className={'WaveformSelector--container'}\n        >\n            {renderButtons(props.selected)}\n        </div>\n    );\n}\n\nWaveformSelector.propTypes = {\n    settings: PropTypes.instanceOf(Immutable.Map)\n}","import React, { Component } from 'react';\nimport TrackPad from './TrackPad';\nimport Audio, { WAVEFORM } from '../../util/AudioService';\n\nimport './Synth.css';\nimport WaveformSelector from './WaveformSelector';\n\nconst TRACKPAD_WIDTH = 592;     // todo: find this value by reference\nconst C1 = 32.703;              // Hz\nconst C6 = 1046.502;\nconst SYNTH_RANGE = C6 - C1;\n\nexport default class Synth extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            trackPadEnabled: false,\n            osc: {\n                type: WAVEFORM.TRIANGLE,\n                pitch: 440\n            }\n        }\n\n        this.handleTrackPadMove = this.handleTrackPadMove.bind(this);\n        this.handleTrackPadChange = this.handleTrackPadChange.bind(this);\n        this.handleWaveformSelected = this.handleWaveformSelected.bind(this);\n    }\n\n    handleTrackPadMove(pos) {\n        const rangeRatio = pos.x / TRACKPAD_WIDTH;\n        const pitch = SYNTH_RANGE * rangeRatio + C1;\n        Audio.setOscPitch(pitch);\n        this.setState(state => ({\n            osc: {\n                type: state.osc.type,\n                pitch: pitch\n            }\n        }));\n    }\n\n    handleTrackPadChange(trackPadEnabled) {\n        if (trackPadEnabled) {\n            const { type, pitch } = this.state.osc\n            Audio.oscillateOn(type, pitch);\n        } else {\n            if (this.state.trackPadEnabled) {\n                Audio.oscillateOff();\n            }\n        }\n        this.setState({\n            trackPadEnabled: trackPadEnabled\n        });\n    }\n\n    handleWaveformSelected(type) {\n        Audio.setOscWaveform(type);\n        this.setState(state => ({\n            osc: {\n                type: type,\n                pitch: state.osc.pitch\n            }\n        }));\n    }\n\n    render() {\n        const { type } = this.state.osc\n        return (\n            <div className='Synth--container'>\n                <label className='Synth--label'>Hold Shift &darr;</label>\n                <TrackPad \n                    onMouseMove={this.handleTrackPadMove}\n                    onChange={this.handleTrackPadChange}\n                />\n                <WaveformSelector\n                    onSelect={this.handleWaveformSelected}\n                    selected={type}\n                />\n            </div>\n        )\n    }\n}","import React, {Component} from 'react';\nimport { connect } from 'react-redux';\n\nimport './App.css';\nimport Sequencer from './components/sequencer/Sequencer';\nimport Synth from './components/synth/Synth';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedBeat: void 0\n    };\n    this.handleBeatSelected = this.handleBeatSelected.bind(this);\n  }\n\n  handleBeatSelected(event) {\n    this.setState({\n      selectedBeat: event.target.value\n    });\n  }\n\n  componentDidMount() {\n    const beatKeys = this.props.beats.map(beat => beat.key);\n    this.setState({\n      selectedBeat: beatKeys.length > 0 ? beatKeys[0] : void 0\n    })\n  }\n\n  renderBeatSelect() {\n    const options = this.props.beats.map(beat => (\n        <option\n          key={beat.key}\n          value={beat.key}\n        >\n          {beat.name}\n        </option>\n      )\n    );\n\n    return (\n      <select\n        value={this.state.selectedBeat}\n        onChange={this.handleBeatSelected}\n        className='App--beat-select'\n      >\n        {options}\n      </select>\n    );\n  }\n\n  render () {\n    const beat = this.props.beats.find(beat => beat.key === this.state.selectedBeat);\n    return (\n      <div className=\"App\">\n        {this.renderBeatSelect()}\n        {beat ? \n          <Sequencer\n            beat={beat}\n          />\n        : null}\n        <Synth />\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  const beats = state.get('beats');\n  return {\n    beats\n  }\n}\n\nexport default connect(mapStateToProps)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './app/store';\n\nimport './index.css';\nimport App from './app/App';\n\nReactDOM.render(\n    <Provider store={store} >\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}